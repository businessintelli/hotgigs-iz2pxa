name: Web CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  COVERAGE_THRESHOLD: '80'
  BUILD_TIMEOUT: '15m'

jobs:
  install:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          cd src/web
          pnpm install --frozen-lockfile
          pnpm audit

  lint:
    needs: install
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.0
          run_install: false

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            src/web/node_modules
            src/web/.eslintcache
          key: ${{ runner.os }}-lint-${{ hashFiles('src/web/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: cd src/web && pnpm install --frozen-lockfile

      - name: Run ESLint
        run: cd src/web && pnpm lint

      - name: Check formatting
        run: cd src/web && pnpm prettier --check "src/**/*.{ts,tsx}"

      - name: Type check
        run: cd src/web && pnpm type-check

  test:
    needs: install
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.0
          run_install: false

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            src/web/node_modules
            src/web/coverage
          key: ${{ runner.os }}-test-${{ hashFiles('src/web/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: cd src/web && pnpm install --frozen-lockfile

      - name: Run unit tests
        run: cd src/web && pnpm test:coverage

      - name: Run E2E tests
        run: cd src/web && pnpm e2e

      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: src/web/coverage

  security:
    needs: install
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.0
          run_install: false

      - name: Install dependencies
        run: cd src/web && pnpm install --frozen-lockfile

      - name: Run security audit
        run: cd src/web && pnpm audit

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  build:
    needs: [lint, test, security]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.0
          run_install: false

      - name: Restore build cache
        uses: actions/cache@v3
        with:
          path: |
            src/web/node_modules
            src/web/dist
          key: ${{ runner.os }}-build-${{ hashFiles('src/web/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: cd src/web && pnpm install --frozen-lockfile

      - name: Build application
        run: cd src/web && pnpm build

      - name: Analyze bundle
        run: cd src/web && pnpm analyze

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: src/web/dist