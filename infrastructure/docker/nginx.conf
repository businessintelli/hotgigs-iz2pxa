# HotGigs Platform NGINX Configuration
# Version: 1.24.0

# Core Configuration
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
pid /var/run/nginx.pid;

# Events Configuration
events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

# HTTP Configuration
http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 10M;

    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # SSL Configuration
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_buffer_size 4k;

    # Security Headers and Policies
    include /etc/nginx/security/cors-policy.conf;
    include /etc/nginx/security/rate-limits.conf;
    include /etc/nginx/security/waf-rules.conf;

    # Logging Configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';

    log_format json_combined escape=json
        '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"request_id":"$request_id"'
        '}';

    access_log /var/log/nginx/access.log json_combined buffer=32k flush=5s;
    error_log /var/log/nginx/error.log warn;

    # Gzip Configuration
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # Upstream Configuration
    upstream backend {
        server localhost:3000;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # Main Server Configuration
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name hotgigs.com *.hotgigs.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/hotgigs.com.crt;
        ssl_certificate_key /etc/nginx/ssl/hotgigs.com.key;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

        # Root Configuration
        root /usr/share/nginx/html;
        index index.html;

        # API Endpoints
        location /api/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;

            # Error handling
            proxy_intercept_errors on;
            error_page 400 401 403 404 405 408 429 500 502 503 504 = @error_handler;
        }

        # Static Files
        location / {
            try_files $uri $uri/ /index.html;
            expires 1h;
            add_header Cache-Control "public, no-transform";
        }

        # Health Check
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'OK';
        }

        # Error Handler
        location @error_handler {
            internal;
            default_type application/json;
            return 500 '{"success":false,"error":{"code":"INTERNAL_ERROR","message":"An unexpected error occurred","details":null}}';
        }

        # Additional Security
        location ~ /\. {
            deny all;
        }

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            log_not_found off;
            access_log off;
        }
    }
}